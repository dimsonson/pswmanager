// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: handlerspub.proto

package grpc_handlers

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PublishTextRecord
type PublishTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchName   string      `protobuf:"bytes,1,opt,name=exchName,proto3" json:"exchName,omitempty"`
	RoutingKey string      `protobuf:"bytes,2,opt,name=routingKey,proto3" json:"routingKey,omitempty"`
	TextRecord *TextRecord `protobuf:"bytes,3,opt,name=textRecord,proto3" json:"textRecord,omitempty"`
}

func (x *PublishTextRequest) Reset() {
	*x = PublishTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTextRequest) ProtoMessage() {}

func (x *PublishTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTextRequest.ProtoReflect.Descriptor instead.
func (*PublishTextRequest) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{0}
}

func (x *PublishTextRequest) GetExchName() string {
	if x != nil {
		return x.ExchName
	}
	return ""
}

func (x *PublishTextRequest) GetRoutingKey() string {
	if x != nil {
		return x.RoutingKey
	}
	return ""
}

func (x *PublishTextRequest) GetTextRecord() *TextRecord {
	if x != nil {
		return x.TextRecord
	}
	return nil
}

type PublishTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // ошибка
}

func (x *PublishTextResponse) Reset() {
	*x = PublishTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTextResponse) ProtoMessage() {}

func (x *PublishTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTextResponse.ProtoReflect.Descriptor instead.
func (*PublishTextResponse) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{1}
}

func (x *PublishTextResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// PublishLoginRecord
type PublishLoginsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchName     string       `protobuf:"bytes,1,opt,name=exchName,proto3" json:"exchName,omitempty"`
	RoutingKey   string       `protobuf:"bytes,2,opt,name=routingKey,proto3" json:"routingKey,omitempty"`
	LoginsRecord *LoginRecord `protobuf:"bytes,3,opt,name=loginsRecord,proto3" json:"loginsRecord,omitempty"`
}

func (x *PublishLoginsRequest) Reset() {
	*x = PublishLoginsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishLoginsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishLoginsRequest) ProtoMessage() {}

func (x *PublishLoginsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishLoginsRequest.ProtoReflect.Descriptor instead.
func (*PublishLoginsRequest) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{2}
}

func (x *PublishLoginsRequest) GetExchName() string {
	if x != nil {
		return x.ExchName
	}
	return ""
}

func (x *PublishLoginsRequest) GetRoutingKey() string {
	if x != nil {
		return x.RoutingKey
	}
	return ""
}

func (x *PublishLoginsRequest) GetLoginsRecord() *LoginRecord {
	if x != nil {
		return x.LoginsRecord
	}
	return nil
}

type PublishLoginsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // ошибка
}

func (x *PublishLoginsResponse) Reset() {
	*x = PublishLoginsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishLoginsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishLoginsResponse) ProtoMessage() {}

func (x *PublishLoginsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishLoginsResponse.ProtoReflect.Descriptor instead.
func (*PublishLoginsResponse) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{3}
}

func (x *PublishLoginsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// PublishBianryRecord
type PublishBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchName     string        `protobuf:"bytes,1,opt,name=exchName,proto3" json:"exchName,omitempty"`
	RoutingKey   string        `protobuf:"bytes,2,opt,name=routingKey,proto3" json:"routingKey,omitempty"`
	BinaryRecord *BinaryRecord `protobuf:"bytes,3,opt,name=binaryRecord,proto3" json:"binaryRecord,omitempty"`
}

func (x *PublishBinaryRequest) Reset() {
	*x = PublishBinaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishBinaryRequest) ProtoMessage() {}

func (x *PublishBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishBinaryRequest.ProtoReflect.Descriptor instead.
func (*PublishBinaryRequest) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{4}
}

func (x *PublishBinaryRequest) GetExchName() string {
	if x != nil {
		return x.ExchName
	}
	return ""
}

func (x *PublishBinaryRequest) GetRoutingKey() string {
	if x != nil {
		return x.RoutingKey
	}
	return ""
}

func (x *PublishBinaryRequest) GetBinaryRecord() *BinaryRecord {
	if x != nil {
		return x.BinaryRecord
	}
	return nil
}

type PublishBinaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // ошибка
}

func (x *PublishBinaryResponse) Reset() {
	*x = PublishBinaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishBinaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishBinaryResponse) ProtoMessage() {}

func (x *PublishBinaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishBinaryResponse.ProtoReflect.Descriptor instead.
func (*PublishBinaryResponse) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{5}
}

func (x *PublishBinaryResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// PublishCardRecord
type PublishCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchName   string      `protobuf:"bytes,1,opt,name=exchName,proto3" json:"exchName,omitempty"`
	RoutingKey string      `protobuf:"bytes,2,opt,name=routingKey,proto3" json:"routingKey,omitempty"`
	CardRecord *CardRecord `protobuf:"bytes,3,opt,name=cardRecord,proto3" json:"cardRecord,omitempty"`
}

func (x *PublishCardRequest) Reset() {
	*x = PublishCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishCardRequest) ProtoMessage() {}

func (x *PublishCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishCardRequest.ProtoReflect.Descriptor instead.
func (*PublishCardRequest) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{6}
}

func (x *PublishCardRequest) GetExchName() string {
	if x != nil {
		return x.ExchName
	}
	return ""
}

func (x *PublishCardRequest) GetRoutingKey() string {
	if x != nil {
		return x.RoutingKey
	}
	return ""
}

func (x *PublishCardRequest) GetCardRecord() *CardRecord {
	if x != nil {
		return x.CardRecord
	}
	return nil
}

type PublishCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // ошибка
}

func (x *PublishCardResponse) Reset() {
	*x = PublishCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishCardResponse) ProtoMessage() {}

func (x *PublishCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishCardResponse.ProtoReflect.Descriptor instead.
func (*PublishCardResponse) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{7}
}

func (x *PublishCardResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TextRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordID  string                 `protobuf:"bytes,1,opt,name=RecordID,proto3" json:"RecordID,omitempty"`
	ChngTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ChngTime,proto3" json:"ChngTime,omitempty"`
	UID       string                 `protobuf:"bytes,3,opt,name=UID,proto3" json:"UID,omitempty"`
	AppID     string                 `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Text      string                 `protobuf:"bytes,5,opt,name=Text,proto3" json:"Text,omitempty"`
	Metadata  string                 `protobuf:"bytes,6,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	Operation int64                  `protobuf:"varint,7,opt,name=Operation,proto3" json:"Operation,omitempty"`
}

func (x *TextRecord) Reset() {
	*x = TextRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextRecord) ProtoMessage() {}

func (x *TextRecord) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextRecord.ProtoReflect.Descriptor instead.
func (*TextRecord) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{8}
}

func (x *TextRecord) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *TextRecord) GetChngTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChngTime
	}
	return nil
}

func (x *TextRecord) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *TextRecord) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *TextRecord) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextRecord) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *TextRecord) GetOperation() int64 {
	if x != nil {
		return x.Operation
	}
	return 0
}

// LoginRec структура сообщния для опараций с текстовыми данными пользователя.
type LoginRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordID  string                 `protobuf:"bytes,1,opt,name=RecordID,proto3" json:"RecordID,omitempty"`
	ChngTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ChngTime,proto3" json:"ChngTime,omitempty"`
	UID       string                 `protobuf:"bytes,3,opt,name=UID,proto3" json:"UID,omitempty"`
	AppID     string                 `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Login     string                 `protobuf:"bytes,5,opt,name=Login,proto3" json:"Login,omitempty"`
	Psw       string                 `protobuf:"bytes,6,opt,name=Psw,proto3" json:"Psw,omitempty"`
	Metadata  string                 `protobuf:"bytes,7,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	Operation int64                  `protobuf:"varint,8,opt,name=Operation,proto3" json:"Operation,omitempty"`
}

func (x *LoginRecord) Reset() {
	*x = LoginRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRecord) ProtoMessage() {}

func (x *LoginRecord) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRecord.ProtoReflect.Descriptor instead.
func (*LoginRecord) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{9}
}

func (x *LoginRecord) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *LoginRecord) GetChngTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChngTime
	}
	return nil
}

func (x *LoginRecord) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *LoginRecord) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *LoginRecord) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *LoginRecord) GetPsw() string {
	if x != nil {
		return x.Psw
	}
	return ""
}

func (x *LoginRecord) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *LoginRecord) GetOperation() int64 {
	if x != nil {
		return x.Operation
	}
	return 0
}

// BinaryRec структура сообщния для опараций с бинарными данными пользователя.
type BinaryRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordID  string                 `protobuf:"bytes,1,opt,name=RecordID,proto3" json:"RecordID,omitempty"`
	ChngTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ChngTime,proto3" json:"ChngTime,omitempty"`
	UID       string                 `protobuf:"bytes,3,opt,name=UID,proto3" json:"UID,omitempty"`
	AppID     string                 `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Binary    string                 `protobuf:"bytes,5,opt,name=Binary,proto3" json:"Binary,omitempty"`
	Metadata  string                 `protobuf:"bytes,6,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	Operation int64                  `protobuf:"varint,7,opt,name=Operation,proto3" json:"Operation,omitempty"`
}

func (x *BinaryRecord) Reset() {
	*x = BinaryRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryRecord) ProtoMessage() {}

func (x *BinaryRecord) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryRecord.ProtoReflect.Descriptor instead.
func (*BinaryRecord) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{10}
}

func (x *BinaryRecord) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *BinaryRecord) GetChngTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChngTime
	}
	return nil
}

func (x *BinaryRecord) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *BinaryRecord) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *BinaryRecord) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *BinaryRecord) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *BinaryRecord) GetOperation() int64 {
	if x != nil {
		return x.Operation
	}
	return 0
}

// CardRec структура сообщния для опараций с данными карт пользователя.
type CardRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordID  string                 `protobuf:"bytes,1,opt,name=RecordID,proto3" json:"RecordID,omitempty"`
	ChngTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ChngTime,proto3" json:"ChngTime,omitempty"`
	UID       string                 `protobuf:"bytes,3,opt,name=UID,proto3" json:"UID,omitempty"`
	AppID     string                 `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Brand     string                 `protobuf:"bytes,5,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Number    string                 `protobuf:"bytes,6,opt,name=Number,proto3" json:"Number,omitempty"`
	ValidDate string                 `protobuf:"bytes,7,opt,name=ValidDate,proto3" json:"ValidDate,omitempty"`
	Code      string                 `protobuf:"bytes,8,opt,name=Code,proto3" json:"Code,omitempty"`
	Holder    string                 `protobuf:"bytes,9,opt,name=Holder,proto3" json:"Holder,omitempty"`
	Metadata  string                 `protobuf:"bytes,10,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	Operation int64                  `protobuf:"varint,11,opt,name=Operation,proto3" json:"Operation,omitempty"`
}

func (x *CardRecord) Reset() {
	*x = CardRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handlerspub_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRecord) ProtoMessage() {}

func (x *CardRecord) ProtoReflect() protoreflect.Message {
	mi := &file_handlerspub_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRecord.ProtoReflect.Descriptor instead.
func (*CardRecord) Descriptor() ([]byte, []int) {
	return file_handlerspub_proto_rawDescGZIP(), []int{11}
}

func (x *CardRecord) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *CardRecord) GetChngTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChngTime
	}
	return nil
}

func (x *CardRecord) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *CardRecord) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CardRecord) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *CardRecord) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CardRecord) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

func (x *CardRecord) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CardRecord) GetHolder() string {
	if x != nil {
		return x.Holder
	}
	return ""
}

func (x *CardRecord) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *CardRecord) GetOperation() int64 {
	if x != nil {
		return x.Operation
	}
	return 0
}

var File_handlerspub_proto protoreflect.FileDescriptor

var file_handlerspub_proto_rawDesc = []byte{
	0x0a, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x01, 0x0a, 0x12,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x31,
	0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x22, 0x2b, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8a,
	0x01, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x15, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12,
	0x37, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2b, 0x0a,
	0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x08, 0x43, 0x68, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x43, 0x68, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12,
	0x36, 0x0a, 0x08, 0x43, 0x68, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x43,
	0x68, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x73, 0x77, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x50, 0x73, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xdc, 0x01, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x36,
	0x0a, 0x08, 0x43, 0x68, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x43, 0x68,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xba, 0x02, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x08, 0x43,
	0x68, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x43, 0x68, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xb7, 0x02,
	0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x4d, 0x51, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_handlerspub_proto_rawDescOnce sync.Once
	file_handlerspub_proto_rawDescData = file_handlerspub_proto_rawDesc
)

func file_handlerspub_proto_rawDescGZIP() []byte {
	file_handlerspub_proto_rawDescOnce.Do(func() {
		file_handlerspub_proto_rawDescData = protoimpl.X.CompressGZIP(file_handlerspub_proto_rawDescData)
	})
	return file_handlerspub_proto_rawDescData
}

var file_handlerspub_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_handlerspub_proto_goTypes = []interface{}{
	(*PublishTextRequest)(nil),    // 0: proto.PublishTextRequest
	(*PublishTextResponse)(nil),   // 1: proto.PublishTextResponse
	(*PublishLoginsRequest)(nil),  // 2: proto.PublishLoginsRequest
	(*PublishLoginsResponse)(nil), // 3: proto.PublishLoginsResponse
	(*PublishBinaryRequest)(nil),  // 4: proto.PublishBinaryRequest
	(*PublishBinaryResponse)(nil), // 5: proto.PublishBinaryResponse
	(*PublishCardRequest)(nil),    // 6: proto.PublishCardRequest
	(*PublishCardResponse)(nil),   // 7: proto.PublishCardResponse
	(*TextRecord)(nil),            // 8: proto.TextRecord
	(*LoginRecord)(nil),           // 9: proto.LoginRecord
	(*BinaryRecord)(nil),          // 10: proto.BinaryRecord
	(*CardRecord)(nil),            // 11: proto.CardRecord
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_handlerspub_proto_depIdxs = []int32{
	8,  // 0: proto.PublishTextRequest.textRecord:type_name -> proto.TextRecord
	9,  // 1: proto.PublishLoginsRequest.loginsRecord:type_name -> proto.LoginRecord
	10, // 2: proto.PublishBinaryRequest.binaryRecord:type_name -> proto.BinaryRecord
	11, // 3: proto.PublishCardRequest.cardRecord:type_name -> proto.CardRecord
	12, // 4: proto.TextRecord.ChngTime:type_name -> google.protobuf.Timestamp
	12, // 5: proto.LoginRecord.ChngTime:type_name -> google.protobuf.Timestamp
	12, // 6: proto.BinaryRecord.ChngTime:type_name -> google.protobuf.Timestamp
	12, // 7: proto.CardRecord.ChngTime:type_name -> google.protobuf.Timestamp
	0,  // 8: proto.ClientRMQhandlers.PublishText:input_type -> proto.PublishTextRequest
	2,  // 9: proto.ClientRMQhandlers.PublishLogins:input_type -> proto.PublishLoginsRequest
	4,  // 10: proto.ClientRMQhandlers.PublishBinary:input_type -> proto.PublishBinaryRequest
	6,  // 11: proto.ClientRMQhandlers.PublishCard:input_type -> proto.PublishCardRequest
	1,  // 12: proto.ClientRMQhandlers.PublishText:output_type -> proto.PublishTextResponse
	3,  // 13: proto.ClientRMQhandlers.PublishLogins:output_type -> proto.PublishLoginsResponse
	5,  // 14: proto.ClientRMQhandlers.PublishBinary:output_type -> proto.PublishBinaryResponse
	7,  // 15: proto.ClientRMQhandlers.PublishCard:output_type -> proto.PublishCardResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_handlerspub_proto_init() }
func file_handlerspub_proto_init() {
	if File_handlerspub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_handlerspub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishLoginsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishLoginsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishBinaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishBinaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handlerspub_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_handlerspub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_handlerspub_proto_goTypes,
		DependencyIndexes: file_handlerspub_proto_depIdxs,
		MessageInfos:      file_handlerspub_proto_msgTypes,
	}.Build()
	File_handlerspub_proto = out.File
	file_handlerspub_proto_rawDesc = nil
	file_handlerspub_proto_goTypes = nil
	file_handlerspub_proto_depIdxs = nil
}
